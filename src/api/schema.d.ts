/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/fineflow/user/user/add": {
    /** 添加用户 */
    post: operations["user_add_fineflow_user_user_add_post"];
  };
  "/fineflow/user/user/delete": {
    /** 删除用户 */
    post: operations["user_delete_fineflow_user_user_delete_post"];
  };
  "/fineflow/user/user/update": {
    /** 更新用户 */
    post: operations["user_update_fineflow_user_user_update_post"];
  };
  "/fineflow/user/user/get": {
    /** 获取用户 */
    post: operations["user_get_fineflow_user_user_get_post"];
  };
  "/fineflow/user/user/query": {
    /** 查询用户 */
    post: operations["user_query_fineflow_user_user_query_post"];
  };
  "/fineflow/user/post/add": {
    /** 添加职务 */
    post: operations["post_add_fineflow_user_post_add_post"];
  };
  "/fineflow/user/post/delete": {
    /** 删除职务 */
    post: operations["post_delete_fineflow_user_post_delete_post"];
  };
  "/fineflow/user/post/update": {
    /** 更新职务 */
    post: operations["post_update_fineflow_user_post_update_post"];
  };
  "/fineflow/user/post/get": {
    /** 获取职务 */
    post: operations["post_get_fineflow_user_post_get_post"];
  };
  "/fineflow/user/post/query": {
    /** 查询部门 */
    post: operations["department_query_fineflow_user_post_query_post"];
  };
  "/fineflow/user/post/all": {
    /** 获取所有部门 */
    post: operations["post_all_fineflow_user_post_all_post"];
  };
  "/fineflow/user/post/query_common": {
    /** 通用查询职务 */
    post: operations["company_equity_penetration_query_common_fineflow_user_post_query_common_post"];
  };
  "/fineflow/user/department/add": {
    /** 添加部门 */
    post: operations["department_add_fineflow_user_department_add_post"];
  };
  "/fineflow/user/department/delete": {
    /** 删除部门 */
    post: operations["department_delete_fineflow_user_department_delete_post"];
  };
  "/fineflow/user/department/update": {
    /** 更新部门 */
    post: operations["department_update_fineflow_user_department_update_post"];
  };
  "/fineflow/user/department/get": {
    /** 获取部门 */
    post: operations["department_get_fineflow_user_department_get_post"];
  };
  "/fineflow/user/department/query": {
    /** 查询部门 */
    post: operations["department_query_fineflow_user_department_query_post"];
  };
  "/fineflow/user/department/all": {
    /** 获取所有部门 */
    post: operations["department_all_fineflow_user_department_all_post"];
  };
  "/fineflow/user/auth_rule/add": {
    /** 添加权限规则 */
    post: operations["auth_rule_add_fineflow_user_auth_rule_add_post"];
  };
  "/fineflow/user/auth_rule/delete": {
    /** 删除权限规则 */
    post: operations["auth_rule_delete_fineflow_user_auth_rule_delete_post"];
  };
  "/fineflow/user/auth_rule/update": {
    /** 更新权限规则 */
    post: operations["auth_rule_update_fineflow_user_auth_rule_update_post"];
  };
  "/fineflow/user/auth_rule/get": {
    /** 获取权限规则 */
    post: operations["auth_rule_get_fineflow_user_auth_rule_get_post"];
  };
  "/fineflow/user/auth_rule/query": {
    /** 查询权限规则 */
    post: operations["auth_rule_query_fineflow_user_auth_rule_query_post"];
  };
  "/fineflow/user/auth_rule/all": {
    /** 获取所有权限规则 */
    post: operations["auth_rule_all_fineflow_user_auth_rule_all_post"];
  };
  "/fineflow/user/get_login_verify_code": {
    /** 获取登录验证码 */
    post: operations["get_login_verify_code_fineflow_user_get_login_verify_code_post"];
  };
  "/fineflow/user/login_by_verify_code": {
    /** 验证码登录 */
    post: operations["login_by_verify_code_fineflow_user_login_by_verify_code_post"];
  };
  "/fineflow/user/refresh_token": {
    /** 刷新token */
    post: operations["refresh_token_fineflow_user_refresh_token_post"];
  };
  "/fineflow/user/get_user_info": {
    /** 用户信息获取接口 */
    post: operations["get_user_info_fineflow_user_get_user_info_post"];
  };
  "/fineflow/flow/mod_name/add": {
    /** 添加模块名称 */
    post: operations["mod_name_add_fineflow_flow_mod_name_add_post"];
  };
  "/fineflow/flow/mod_name/delete": {
    /** 删除模块名称 */
    post: operations["mod_name_delete_fineflow_flow_mod_name_delete_post"];
  };
  "/fineflow/flow/mod_name/update": {
    /** 更新模块名称 */
    post: operations["mod_name_update_fineflow_flow_mod_name_update_post"];
  };
  "/fineflow/flow/mod_name/get": {
    /** 获取模块名称 */
    post: operations["mod_name_get_fineflow_flow_mod_name_get_post"];
  };
  "/fineflow/flow/mod_name/query": {
    /** 查询模块名称 */
    post: operations["mod_name_query_fineflow_flow_mod_name_query_post"];
  };
  "/fineflow/flow/mod_name/all": {
    /** 获取所有模块名称 */
    post: operations["mod_name_all_fineflow_flow_mod_name_all_post"];
  };
  "/fineflow/flow/category_name/add": {
    /** 添加分类名称 */
    post: operations["category_name_add_fineflow_flow_category_name_add_post"];
  };
  "/fineflow/flow/category_name/delete": {
    /** 删除分类名称 */
    post: operations["category_name_delete_fineflow_flow_category_name_delete_post"];
  };
  "/fineflow/flow/category_name/update": {
    /** 更新分类名称 */
    post: operations["category_name_update_fineflow_flow_category_name_update_post"];
  };
  "/fineflow/flow/category_name/get": {
    /** 获取分类名称 */
    post: operations["category_name_get_fineflow_flow_category_name_get_post"];
  };
  "/fineflow/flow/category_name/query": {
    /** 查询分类名称 */
    post: operations["category_name_query_fineflow_flow_category_name_query_post"];
  };
  "/fineflow/flow/category_name/all": {
    /** 获取所有分类名称 */
    post: operations["category_name_all_fineflow_flow_category_name_all_post"];
  };
  "/fineflow/flow/node/add": {
    /** 添加节点 */
    post: operations["node_add_fineflow_flow_node_add_post"];
  };
  "/fineflow/flow/node/delete": {
    /** 删除节点 */
    post: operations["node_delete_fineflow_flow_node_delete_post"];
  };
  "/fineflow/flow/node/update": {
    /** 更新节点 */
    post: operations["node_update_fineflow_flow_node_update_post"];
  };
  "/fineflow/flow/node/get": {
    /** 获取节点 */
    post: operations["node_get_fineflow_flow_node_get_post"];
  };
  "/fineflow/flow/node/query": {
    /** 查询节点 */
    post: operations["node_query_fineflow_flow_node_query_post"];
  };
  "/fineflow/flow/node/all": {
    /** 获取所有节点 */
    post: operations["node_all_fineflow_flow_node_all_post"];
  };
  "/fineflow/flow/flow/add": {
    /** 添加工作流 */
    post: operations["flow_add_fineflow_flow_flow_add_post"];
  };
  "/fineflow/flow/flow/delete": {
    /** 删除工作流 */
    post: operations["flow_delete_fineflow_flow_flow_delete_post"];
  };
  "/fineflow/flow/flow/update": {
    /** 更新工作流 */
    post: operations["flow_update_fineflow_flow_flow_update_post"];
  };
  "/fineflow/flow/flow/get": {
    /** 获取工作流 */
    post: operations["flow_get_fineflow_flow_flow_get_post"];
  };
  "/fineflow/flow/flow/query": {
    /** 查询工作流 */
    post: operations["flow_query_fineflow_flow_flow_query_post"];
  };
  "/fineflow/flow/flow/all": {
    /** 获取所有工作流 */
    post: operations["flow_all_fineflow_flow_flow_all_post"];
  };
  "/fineflow/flow/flow_category_name/add": {
    /** 添加工作流分类名称 */
    post: operations["flow_category_name_add_fineflow_flow_flow_category_name_add_post"];
  };
  "/fineflow/flow/flow_category_name/delete": {
    /** 删除工作流分类名称 */
    post: operations["flow_category_name_delete_fineflow_flow_flow_category_name_delete_post"];
  };
  "/fineflow/flow/flow_category_name/update": {
    /** 更新工作流分类名称 */
    post: operations["flow_category_name_update_fineflow_flow_flow_category_name_update_post"];
  };
  "/fineflow/flow/flow_category_name/get": {
    /** 获取工作流分类名称 */
    post: operations["flow_category_name_get_fineflow_flow_flow_category_name_get_post"];
  };
  "/fineflow/flow/flow_category_name/query": {
    /** 查询工作流分类名称 */
    post: operations["flow_category_name_query_fineflow_flow_flow_category_name_query_post"];
  };
  "/fineflow/flow/flow_category_name/all": {
    /** 获取所有工作流分类名称 */
    post: operations["flow_category_name_all_fineflow_flow_flow_category_name_all_post"];
  };
  "/fineflow/flow/flow_mod_name/add": {
    /** 添加工作流模块名称 */
    post: operations["flow_mod_name_add_fineflow_flow_flow_mod_name_add_post"];
  };
  "/fineflow/flow/flow_mod_name/delete": {
    /** 删除工作流模块名称 */
    post: operations["flow_mod_name_delete_fineflow_flow_flow_mod_name_delete_post"];
  };
  "/fineflow/flow/flow_mod_name/update": {
    /** 更新工作流模块名称 */
    post: operations["flow_mod_name_update_fineflow_flow_flow_mod_name_update_post"];
  };
  "/fineflow/flow/flow_mod_name/get": {
    /** 获取工作流模块名称 */
    post: operations["flow_mod_name_get_fineflow_flow_flow_mod_name_get_post"];
  };
  "/fineflow/flow/flow_mod_name/query": {
    /** 查询工作流模块名称 */
    post: operations["flow_mod_name_query_fineflow_flow_flow_mod_name_query_post"];
  };
  "/fineflow/flow/flow_mod_name/all": {
    /** 获取所有工作流模块名称 */
    post: operations["flow_mod_name_all_fineflow_flow_flow_mod_name_all_post"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** AuthRuleAddReq */
    AuthRuleAddReq: {
      /** Name */
      name: string;
      /** Mod */
      mod: string;
      /** Category */
      category: string;
    };
    /** AuthRuleAddRes */
    AuthRuleAddRes: {
      /** Name */
      name: string | null;
      /** Mod */
      mod: string | null;
      /** Category */
      category: string | null;
      /** Id */
      id: number | null;
    };
    /** AuthRuleAllReq */
    AuthRuleAllReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
    };
    /** AuthRuleAllRes */
    AuthRuleAllRes: {
      /** Items */
      items: components["schemas"]["AuthRuleInfo-Output"][];
    };
    /** AuthRuleDeleteReq */
    AuthRuleDeleteReq: {
      /** Id */
      id: number;
    };
    /** AuthRuleGetReq */
    AuthRuleGetReq: {
      /** Id */
      id: number;
    };
    /** AuthRuleGetRes */
    AuthRuleGetRes: {
      /** Name */
      name: string | null;
      /** Mod */
      mod: string | null;
      /** Category */
      category: string | null;
      /** Id */
      id: number | null;
    };
    /** AuthRuleInfo */
    "AuthRuleInfo-Input": {
      /** Name */
      name?: string | null;
      /** Mod */
      mod?: string | null;
      /** Category */
      category?: string | null;
      /** Id */
      id?: number | null;
    };
    /** AuthRuleInfo */
    "AuthRuleInfo-Output": {
      /** Name */
      name: string | null;
      /** Mod */
      mod: string | null;
      /** Category */
      category: string | null;
      /** Id */
      id: number | null;
    };
    /** AuthRuleQueryReq */
    AuthRuleQueryReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
      /** Params */
      params?: components["schemas"]["QueryParam"][] | null;
      /** Order */
      order?: ({
        [key: string]: "asc" | "desc" | "";
      }) | null;
      query?: components["schemas"]["AuthRuleInfo-Input"] | null;
      /** Page */
      page: number;
      /** Page Size */
      page_size: number;
    };
    /** AuthRuleQueryRes */
    AuthRuleQueryRes: {
      /** Count */
      count: number;
      /** Items */
      items: components["schemas"]["AuthRuleInfo-Output"][];
    };
    /** AuthRuleUpdateReq */
    AuthRuleUpdateReq: {
      /** Name */
      name?: string | null;
      /** Mod */
      mod?: string | null;
      /** Category */
      category?: string | null;
      /** Id */
      id?: number | null;
    };
    /** AuthRuleUpdateRes */
    AuthRuleUpdateRes: {
      /** Name */
      name: string | null;
      /** Mod */
      mod: string | null;
      /** Category */
      category: string | null;
      /** Id */
      id: number | null;
    };
    /**
     * BaseModel
     * @description Usage docs: https://docs.pydantic.dev/2.2/usage/models/
     *
     * A base class for creating Pydantic models.
     *
     * Attributes:
     *     __class_vars__: The names of classvars defined on the model.
     *     __private_attributes__: Metadata about the private attributes of the model.
     *     __signature__: The signature for instantiating the model.
     *
     *     __pydantic_complete__: Whether model building is completed, or if there are still undefined fields.
     *     __pydantic_core_schema__: The pydantic-core schema used to build the SchemaValidator and SchemaSerializer.
     *     __pydantic_custom_init__: Whether the model has a custom `__init__` function.
     *     __pydantic_decorators__: Metadata containing the decorators defined on the model.
     *         This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.
     *     __pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to
     *         __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.
     *     __pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.
     *     __pydantic_post_init__: The name of the post-init method for the model, if defined.
     *     __pydantic_root_model__: Whether the model is a `RootModel`.
     *     __pydantic_serializer__: The pydantic-core SchemaSerializer used to dump instances of the model.
     *     __pydantic_validator__: The pydantic-core SchemaValidator used to validate instances of the model.
     *
     *     __pydantic_extra__: An instance attribute with the values of extra fields from validation when
     *         `model_config['extra'] == 'allow'`.
     *     __pydantic_fields_set__: An instance attribute with the names of fields explicitly specified during validation.
     *     __pydantic_private__: Instance attribute with the values of private attributes set on the model instance.
     */
    BaseModel: Record<string, never>;
    /** CategoryNameAddReq */
    CategoryNameAddReq: {
      /** Name */
      name: string;
      /** Mod Name Id */
      mod_name_id: number;
    };
    /** CategoryNameAddRes */
    CategoryNameAddRes: {
      /** Name */
      name: string | null;
      /** Mod Name Id */
      mod_name_id: number | null;
      /** Id */
      id: number | null;
    };
    /** CategoryNameAllReq */
    CategoryNameAllReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
    };
    /** CategoryNameAllRes */
    CategoryNameAllRes: {
      /** Items */
      items: components["schemas"]["CategoryNameInfo-Output"][];
    };
    /** CategoryNameDeleteReq */
    CategoryNameDeleteReq: {
      /** Id */
      id: number;
    };
    /** CategoryNameGetReq */
    CategoryNameGetReq: {
      /** Id */
      id: number;
    };
    /** CategoryNameGetRes */
    CategoryNameGetRes: {
      /** Name */
      name: string | null;
      /** Mod Name Id */
      mod_name_id: number | null;
      /** Id */
      id: number | null;
    };
    /** CategoryNameInfo */
    "CategoryNameInfo-Input": {
      /** Name */
      name?: string | null;
      /** Mod Name Id */
      mod_name_id?: number | null;
      /** Id */
      id?: number | null;
    };
    /** CategoryNameInfo */
    "CategoryNameInfo-Output": {
      /** Name */
      name: string | null;
      /** Mod Name Id */
      mod_name_id: number | null;
      /** Id */
      id: number | null;
    };
    /** CategoryNameQueryReq */
    CategoryNameQueryReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
      /** Params */
      params?: components["schemas"]["QueryParam"][] | null;
      /** Order */
      order?: ({
        [key: string]: "asc" | "desc" | "";
      }) | null;
      query?: components["schemas"]["CategoryNameInfo-Input"] | null;
      /** Page */
      page: number;
      /** Page Size */
      page_size: number;
    };
    /** CategoryNameQueryRes */
    CategoryNameQueryRes: {
      /** Count */
      count: number;
      /** Items */
      items: components["schemas"]["CategoryNameInfo-Output"][];
    };
    /** CategoryNameUpdateReq */
    CategoryNameUpdateReq: {
      /** Name */
      name?: string | null;
      /** Mod Name Id */
      mod_name_id?: number | null;
      /** Id */
      id?: number | null;
    };
    /** CategoryNameUpdateRes */
    CategoryNameUpdateRes: {
      /** Name */
      name: string | null;
      /** Mod Name Id */
      mod_name_id: number | null;
      /** Id */
      id: number | null;
    };
    /** DepartmentAddReq */
    DepartmentAddReq: {
      /** Name */
      name: string;
      /** Posts */
      posts?: unknown[] | null;
      /** Auth Data */
      auth_data?: unknown[] | null;
    };
    /** DepartmentAddRes */
    DepartmentAddRes: {
      /** Name */
      name: string | null;
      /** Posts */
      posts: unknown[] | null;
      /** Auth Data */
      auth_data: unknown[] | null;
      /** Id */
      id: number | null;
    };
    /** DepartmentAllReq */
    DepartmentAllReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
    };
    /** DepartmentAllRes */
    DepartmentAllRes: {
      /** Items */
      items: components["schemas"]["DepartmentInfo-Output"][];
    };
    /** DepartmentDeleteReq */
    DepartmentDeleteReq: {
      /** Id */
      id: number;
    };
    /** DepartmentGetReq */
    DepartmentGetReq: {
      /** Id */
      id: number;
    };
    /** DepartmentGetRes */
    DepartmentGetRes: {
      /** Name */
      name: string | null;
      /** Posts */
      posts: unknown[] | null;
      /** Auth Data */
      auth_data: unknown[] | null;
      /** Id */
      id: number | null;
    };
    /** DepartmentInfo */
    "DepartmentInfo-Input": {
      /** Name */
      name?: string | null;
      /** Posts */
      posts?: unknown[] | null;
      /** Auth Data */
      auth_data?: unknown[] | null;
      /** Id */
      id?: number | null;
    };
    /** DepartmentInfo */
    "DepartmentInfo-Output": {
      /** Name */
      name: string | null;
      /** Posts */
      posts: unknown[] | null;
      /** Auth Data */
      auth_data: unknown[] | null;
      /** Id */
      id: number | null;
    };
    /** DepartmentQueryReq */
    DepartmentQueryReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
      /** Params */
      params?: components["schemas"]["QueryParam"][] | null;
      /** Order */
      order?: ({
        [key: string]: "asc" | "desc" | "";
      }) | null;
      query?: components["schemas"]["DepartmentInfo-Input"] | null;
      /** Page */
      page: number;
      /** Page Size */
      page_size: number;
    };
    /** DepartmentQueryRes */
    DepartmentQueryRes: {
      /** Count */
      count: number;
      /** Items */
      items: components["schemas"]["DepartmentInfo-Output"][];
    };
    /** DepartmentUpdateReq */
    DepartmentUpdateReq: {
      /** Name */
      name?: string | null;
      /** Posts */
      posts?: unknown[] | null;
      /** Auth Data */
      auth_data?: unknown[] | null;
      /** Id */
      id?: number | null;
    };
    /** DepartmentUpdateRes */
    DepartmentUpdateRes: {
      /** Name */
      name: string | null;
      /** Posts */
      posts: unknown[] | null;
      /** Auth Data */
      auth_data: unknown[] | null;
      /** Id */
      id: number | null;
    };
    /** FlowAddReq */
    FlowAddReq: {
      /** Name */
      name: string;
      /** Flow Category Name Id */
      flow_category_name_id: number;
      /** Content */
      content: unknown;
    };
    /** FlowAddRes */
    FlowAddRes: {
      /** Name */
      name: string | null;
      /** Flow Category Name Id */
      flow_category_name_id: number | null;
      /** Content */
      content: unknown;
      /** Key */
      key: number | null;
    };
    /** FlowAllReq */
    FlowAllReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
    };
    /** FlowAllRes */
    FlowAllRes: {
      /** Items */
      items: components["schemas"]["FlowInfo-Output"][];
    };
    /** FlowCategoryNameAddReq */
    FlowCategoryNameAddReq: {
      /** Name */
      name: string;
      /** Flow Mod Name Id */
      flow_mod_name_id: number;
    };
    /** FlowCategoryNameAddRes */
    FlowCategoryNameAddRes: {
      /** Name */
      name: string | null;
      /** Flow Mod Name Id */
      flow_mod_name_id: number | null;
      /** Id */
      id: number | null;
    };
    /** FlowCategoryNameAllReq */
    FlowCategoryNameAllReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
    };
    /** FlowCategoryNameAllRes */
    FlowCategoryNameAllRes: {
      /** Items */
      items: components["schemas"]["FlowCategoryNameInfo-Output"][];
    };
    /** FlowCategoryNameDeleteReq */
    FlowCategoryNameDeleteReq: {
      /** Id */
      id: number;
    };
    /** FlowCategoryNameGetReq */
    FlowCategoryNameGetReq: {
      /** Id */
      id: number;
    };
    /** FlowCategoryNameGetRes */
    FlowCategoryNameGetRes: {
      /** Name */
      name: string | null;
      /** Flow Mod Name Id */
      flow_mod_name_id: number | null;
      /** Id */
      id: number | null;
    };
    /** FlowCategoryNameInfo */
    "FlowCategoryNameInfo-Input": {
      /** Name */
      name?: string | null;
      /** Flow Mod Name Id */
      flow_mod_name_id?: number | null;
      /** Id */
      id?: number | null;
    };
    /** FlowCategoryNameInfo */
    "FlowCategoryNameInfo-Output": {
      /** Name */
      name: string | null;
      /** Flow Mod Name Id */
      flow_mod_name_id: number | null;
      /** Id */
      id: number | null;
    };
    /** FlowCategoryNameQueryReq */
    FlowCategoryNameQueryReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
      /** Params */
      params?: components["schemas"]["QueryParam"][] | null;
      /** Order */
      order?: ({
        [key: string]: "asc" | "desc" | "";
      }) | null;
      query?: components["schemas"]["FlowCategoryNameInfo-Input"] | null;
      /** Page */
      page: number;
      /** Page Size */
      page_size: number;
    };
    /** FlowCategoryNameQueryRes */
    FlowCategoryNameQueryRes: {
      /** Count */
      count: number;
      /** Items */
      items: components["schemas"]["FlowCategoryNameInfo-Output"][];
    };
    /** FlowCategoryNameUpdateReq */
    FlowCategoryNameUpdateReq: {
      /** Name */
      name?: string | null;
      /** Flow Mod Name Id */
      flow_mod_name_id?: number | null;
      /** Id */
      id?: number | null;
    };
    /** FlowCategoryNameUpdateRes */
    FlowCategoryNameUpdateRes: {
      /** Name */
      name: string | null;
      /** Flow Mod Name Id */
      flow_mod_name_id: number | null;
      /** Id */
      id: number | null;
    };
    /** FlowDeleteReq */
    FlowDeleteReq: {
      /** Key */
      key: number;
    };
    /** FlowGetReq */
    FlowGetReq: {
      /** Key */
      key: number;
    };
    /** FlowGetRes */
    FlowGetRes: {
      /** Name */
      name: string | null;
      /** Flow Category Name Id */
      flow_category_name_id: number | null;
      /** Content */
      content: unknown;
      /** Key */
      key: number | null;
    };
    /** FlowInfo */
    "FlowInfo-Input": {
      /** Name */
      name?: string | null;
      /** Flow Category Name Id */
      flow_category_name_id?: number | null;
      /** Content */
      content?: unknown;
      /** Key */
      key?: number | null;
    };
    /** FlowInfo */
    "FlowInfo-Output": {
      /** Name */
      name: string | null;
      /** Flow Category Name Id */
      flow_category_name_id: number | null;
      /** Content */
      content: unknown;
      /** Key */
      key: number | null;
    };
    /** FlowModNameAddReq */
    FlowModNameAddReq: {
      /** Name */
      name: string;
      /** Owner Id */
      owner_id: string;
    };
    /** FlowModNameAddRes */
    FlowModNameAddRes: {
      /** Name */
      name: string | null;
      /** Owner Id */
      owner_id: string | null;
      /** Id */
      id: number | null;
    };
    /** FlowModNameAllReq */
    FlowModNameAllReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
    };
    /** FlowModNameAllRes */
    FlowModNameAllRes: {
      /** Items */
      items: components["schemas"]["FlowModNameInfo-Output"][];
    };
    /** FlowModNameDeleteReq */
    FlowModNameDeleteReq: {
      /** Id */
      id: number;
    };
    /** FlowModNameGetReq */
    FlowModNameGetReq: {
      /** Id */
      id: number;
    };
    /** FlowModNameGetRes */
    FlowModNameGetRes: {
      /** Name */
      name: string | null;
      /** Owner Id */
      owner_id: string | null;
      /** Id */
      id: number | null;
    };
    /** FlowModNameInfo */
    "FlowModNameInfo-Input": {
      /** Name */
      name?: string | null;
      /** Owner Id */
      owner_id?: string | null;
      /** Id */
      id?: number | null;
    };
    /** FlowModNameInfo */
    "FlowModNameInfo-Output": {
      /** Name */
      name: string | null;
      /** Owner Id */
      owner_id: string | null;
      /** Id */
      id: number | null;
    };
    /** FlowModNameQueryReq */
    FlowModNameQueryReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
      /** Params */
      params?: components["schemas"]["QueryParam"][] | null;
      /** Order */
      order?: ({
        [key: string]: "asc" | "desc" | "";
      }) | null;
      query?: components["schemas"]["FlowModNameInfo-Input"] | null;
      /** Page */
      page: number;
      /** Page Size */
      page_size: number;
    };
    /** FlowModNameQueryRes */
    FlowModNameQueryRes: {
      /** Count */
      count: number;
      /** Items */
      items: components["schemas"]["FlowModNameInfo-Output"][];
    };
    /** FlowModNameUpdateReq */
    FlowModNameUpdateReq: {
      /** Name */
      name?: string | null;
      /** Owner Id */
      owner_id?: string | null;
      /** Id */
      id?: number | null;
    };
    /** FlowModNameUpdateRes */
    FlowModNameUpdateRes: {
      /** Name */
      name: string | null;
      /** Owner Id */
      owner_id: string | null;
      /** Id */
      id: number | null;
    };
    /** FlowQueryReq */
    FlowQueryReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
      /** Params */
      params?: components["schemas"]["QueryParam"][] | null;
      /** Order */
      order?: ({
        [key: string]: "asc" | "desc" | "";
      }) | null;
      query?: components["schemas"]["FlowInfo-Input"] | null;
      /** Page */
      page: number;
      /** Page Size */
      page_size: number;
    };
    /** FlowQueryRes */
    FlowQueryRes: {
      /** Count */
      count: number;
      /** Items */
      items: components["schemas"]["FlowInfo-Output"][];
    };
    /** FlowUpdateReq */
    FlowUpdateReq: {
      /** Name */
      name?: string | null;
      /** Flow Category Name Id */
      flow_category_name_id?: number | null;
      /** Content */
      content?: unknown;
      /** Key */
      key?: number | null;
    };
    /** FlowUpdateRes */
    FlowUpdateRes: {
      /** Name */
      name: string | null;
      /** Flow Category Name Id */
      flow_category_name_id: number | null;
      /** Content */
      content: unknown;
      /** Key */
      key: number | null;
    };
    /** GetLoginVerifyCodeReq */
    GetLoginVerifyCodeReq: {
      /** Account */
      account: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** LoginByVerifyCode */
    LoginByVerifyCode: {
      /** Account */
      account: string;
      /** Code */
      code: string;
    };
    /** ModNameAddReq */
    ModNameAddReq: {
      /** Name */
      name: string;
      /** Owner Id */
      owner_id: string;
    };
    /** ModNameAddRes */
    ModNameAddRes: {
      /** Name */
      name: string | null;
      /** Owner Id */
      owner_id: string | null;
      /** Id */
      id: number | null;
    };
    /** ModNameAllReq */
    ModNameAllReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
    };
    /** ModNameAllRes */
    ModNameAllRes: {
      /** Items */
      items: components["schemas"]["ModNameInfo-Output"][];
    };
    /** ModNameDeleteReq */
    ModNameDeleteReq: {
      /** Id */
      id: number;
    };
    /** ModNameGetReq */
    ModNameGetReq: {
      /** Id */
      id: number;
    };
    /** ModNameGetRes */
    ModNameGetRes: {
      /** Name */
      name: string | null;
      /** Owner Id */
      owner_id: string | null;
      /** Id */
      id: number | null;
    };
    /** ModNameInfo */
    "ModNameInfo-Input": {
      /** Name */
      name?: string | null;
      /** Owner Id */
      owner_id?: string | null;
      /** Id */
      id?: number | null;
    };
    /** ModNameInfo */
    "ModNameInfo-Output": {
      /** Name */
      name: string | null;
      /** Owner Id */
      owner_id: string | null;
      /** Id */
      id: number | null;
    };
    /** ModNameQueryReq */
    ModNameQueryReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
      /** Params */
      params?: components["schemas"]["QueryParam"][] | null;
      /** Order */
      order?: ({
        [key: string]: "asc" | "desc" | "";
      }) | null;
      query?: components["schemas"]["ModNameInfo-Input"] | null;
      /** Page */
      page: number;
      /** Page Size */
      page_size: number;
    };
    /** ModNameQueryRes */
    ModNameQueryRes: {
      /** Count */
      count: number;
      /** Items */
      items: components["schemas"]["ModNameInfo-Output"][];
    };
    /** ModNameUpdateReq */
    ModNameUpdateReq: {
      /** Name */
      name?: string | null;
      /** Owner Id */
      owner_id?: string | null;
      /** Id */
      id?: number | null;
    };
    /** ModNameUpdateRes */
    ModNameUpdateRes: {
      /** Name */
      name: string | null;
      /** Owner Id */
      owner_id: string | null;
      /** Id */
      id: number | null;
    };
    /** NodeAddReq */
    NodeAddReq: {
      /** Name */
      name: string;
      /** Category Name Id */
      category_name_id: number;
      /** Content */
      content: unknown;
    };
    /** NodeAddRes */
    NodeAddRes: {
      /** Name */
      name: string | null;
      /** Category Name Id */
      category_name_id: number | null;
      /** Content */
      content: unknown;
      /** Key */
      key: number | null;
    };
    /** NodeAllReq */
    NodeAllReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
    };
    /** NodeAllRes */
    NodeAllRes: {
      /** Items */
      items: components["schemas"]["NodeInfo-Output"][];
    };
    /** NodeDeleteReq */
    NodeDeleteReq: {
      /** Key */
      key: number;
    };
    /** NodeGetReq */
    NodeGetReq: {
      /** Key */
      key: number;
    };
    /** NodeGetRes */
    NodeGetRes: {
      /** Name */
      name: string | null;
      /** Category Name Id */
      category_name_id: number | null;
      /** Content */
      content: unknown;
      /** Key */
      key: number | null;
    };
    /** NodeInfo */
    "NodeInfo-Input": {
      /** Name */
      name?: string | null;
      /** Category Name Id */
      category_name_id?: number | null;
      /** Content */
      content?: unknown;
      /** Key */
      key?: number | null;
    };
    /** NodeInfo */
    "NodeInfo-Output": {
      /** Name */
      name: string | null;
      /** Category Name Id */
      category_name_id: number | null;
      /** Content */
      content: unknown;
      /** Key */
      key: number | null;
    };
    /** NodeQueryReq */
    NodeQueryReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
      /** Params */
      params?: components["schemas"]["QueryParam"][] | null;
      /** Order */
      order?: ({
        [key: string]: "asc" | "desc" | "";
      }) | null;
      query?: components["schemas"]["NodeInfo-Input"] | null;
      /** Page */
      page: number;
      /** Page Size */
      page_size: number;
    };
    /** NodeQueryRes */
    NodeQueryRes: {
      /** Count */
      count: number;
      /** Items */
      items: components["schemas"]["NodeInfo-Output"][];
    };
    /** NodeUpdateReq */
    NodeUpdateReq: {
      /** Name */
      name?: string | null;
      /** Category Name Id */
      category_name_id?: number | null;
      /** Content */
      content?: unknown;
      /** Key */
      key?: number | null;
    };
    /** NodeUpdateRes */
    NodeUpdateRes: {
      /** Name */
      name: string | null;
      /** Category Name Id */
      category_name_id: number | null;
      /** Content */
      content: unknown;
      /** Key */
      key: number | null;
    };
    /** PostAddReq */
    PostAddReq: {
      /** Name */
      name: string;
      /** Department Id */
      department_id: number;
    };
    /** PostAddRes */
    PostAddRes: {
      /** Name */
      name: string | null;
      /** Department Id */
      department_id: number | null;
      /** Id */
      id: number | null;
      /** Department */
      department: unknown;
    };
    /** PostAllReq */
    PostAllReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
    };
    /** PostAllRes */
    PostAllRes: {
      /** Items */
      items: components["schemas"]["PostInfo-Output"][];
    };
    /** PostDeleteReq */
    PostDeleteReq: {
      /** Id */
      id: number;
    };
    /** PostGetReq */
    PostGetReq: {
      /** Id */
      id: number;
    };
    /** PostGetRes */
    PostGetRes: {
      /** Name */
      name: string | null;
      /** Department Id */
      department_id: number | null;
      /** Id */
      id: number | null;
      /** Department */
      department: unknown;
    };
    /** PostInfo */
    "PostInfo-Input": {
      /** Name */
      name?: string | null;
      /** Department Id */
      department_id?: number | null;
      /** Id */
      id?: number | null;
      /** Department */
      department?: unknown;
    };
    /** PostInfo */
    "PostInfo-Output": {
      /** Name */
      name: string | null;
      /** Department Id */
      department_id: number | null;
      /** Id */
      id: number | null;
      /** Department */
      department: unknown;
    };
    /** PostQueryReq */
    PostQueryReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
      /** Params */
      params?: components["schemas"]["QueryParam"][] | null;
      /** Order */
      order?: ({
        [key: string]: "asc" | "desc" | "";
      }) | null;
      query?: components["schemas"]["PostInfo-Input"] | null;
      /** Page */
      page: number;
      /** Page Size */
      page_size: number;
    };
    /** PostQueryRes */
    PostQueryRes: {
      /** Count */
      count: number;
      /** Items */
      items: components["schemas"]["PostInfo-Output"][];
    };
    /** PostUpdateReq */
    PostUpdateReq: {
      /** Name */
      name?: string | null;
      /** Department Id */
      department_id?: number | null;
      /** Id */
      id?: number | null;
    };
    /** PostUpdateRes */
    PostUpdateRes: {
      /** Name */
      name: string | null;
      /** Department Id */
      department_id: number | null;
      /** Id */
      id: number | null;
      /** Department */
      department: unknown;
    };
    /** QueryParam */
    QueryParam: {
      /** Name */
      name: string;
      /**
       * Type
       * @enum {string}
       */
      type: "=" | "==" | ">" | ">=" | "<" | "<=" | "in" | "not_in" | "like" | "range" | "find_in_set";
      /** Value */
      value: unknown;
    };
    /** QueryParams */
    QueryParams: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
      /** Params */
      params?: components["schemas"]["QueryParam"][] | null;
      /** Order */
      order?: ({
        [key: string]: "asc" | "desc" | "";
      }) | null;
      query?: components["schemas"]["BaseModel"] | null;
      /** Page */
      page: number;
      /** Page Size */
      page_size: number;
    };
    /** UserAddReq */
    UserAddReq: {
      /** Email */
      email: string;
      /** Name */
      name: string;
      /** Phone */
      phone?: string | null;
      /** Posts */
      posts?: unknown[] | null;
      /** Departments */
      departments?: unknown[] | null;
      /** Manage Departments */
      manage_departments?: unknown[] | null;
      /**
       * Config
       * @default {}
       */
      config?: unknown;
      /**
       * Other Info
       * @default {}
       */
      other_info?: unknown;
      /** Auth Data */
      auth_data?: unknown[] | null;
    };
    /** UserAddRes */
    UserAddRes: {
      /** Email */
      email: string | null;
      /** Name */
      name: string | null;
      /** Phone */
      phone: string | null;
      /** Posts */
      posts: unknown[] | null;
      /** Departments */
      departments: unknown[] | null;
      /** Manage Departments */
      manage_departments: unknown[] | null;
      /** Config */
      config: unknown;
      /** Other Info */
      other_info: unknown;
      /** Auth Data */
      auth_data: unknown[] | null;
      /** Id */
      id: string | null;
    };
    /** UserDeleteReq */
    UserDeleteReq: {
      /** Id */
      id: string;
    };
    /** UserGetReq */
    UserGetReq: {
      /** Id */
      id: string;
    };
    /** UserGetRes */
    UserGetRes: {
      /** Email */
      email: string | null;
      /** Name */
      name: string | null;
      /** Phone */
      phone: string | null;
      /** Posts */
      posts: unknown[] | null;
      /** Departments */
      departments: unknown[] | null;
      /** Manage Departments */
      manage_departments: unknown[] | null;
      /** Config */
      config: unknown;
      /** Other Info */
      other_info: unknown;
      /** Auth Data */
      auth_data: unknown[] | null;
      /** Id */
      id: string | null;
    };
    /** UserInfo */
    "UserInfo-Input": {
      /** Email */
      email?: string | null;
      /** Name */
      name?: string | null;
      /** Phone */
      phone?: string | null;
      /** Posts */
      posts?: unknown[] | null;
      /** Departments */
      departments?: unknown[] | null;
      /** Manage Departments */
      manage_departments?: unknown[] | null;
      /** Config */
      config?: unknown;
      /** Other Info */
      other_info?: unknown;
      /** Auth Data */
      auth_data?: unknown[] | null;
      /** Id */
      id?: string | null;
    };
    /** UserInfo */
    "UserInfo-Output": {
      /** Email */
      email: string | null;
      /** Name */
      name: string | null;
      /** Phone */
      phone: string | null;
      /** Posts */
      posts: unknown[] | null;
      /** Departments */
      departments: unknown[] | null;
      /** Manage Departments */
      manage_departments: unknown[] | null;
      /** Config */
      config: unknown;
      /** Other Info */
      other_info: unknown;
      /** Auth Data */
      auth_data: unknown[] | null;
      /** Id */
      id: string | null;
    };
    /** UserQueryReq */
    UserQueryReq: {
      /** Include */
      include?: string[] | null;
      /** Ex Include */
      ex_include?: string[] | null;
      /**
       * Relation Use Id
       * @default false
       */
      relation_use_id?: boolean;
      /** Params */
      params?: components["schemas"]["QueryParam"][] | null;
      /** Order */
      order?: ({
        [key: string]: "asc" | "desc" | "";
      }) | null;
      query?: components["schemas"]["UserInfo-Input"] | null;
      /** Page */
      page: number;
      /** Page Size */
      page_size: number;
    };
    /** UserQueryRes */
    UserQueryRes: {
      /** Count */
      count: number;
      /** Items */
      items: components["schemas"]["UserInfo-Output"][];
    };
    /** UserUpdateReq */
    UserUpdateReq: {
      /** Email */
      email?: string | null;
      /** Name */
      name?: string | null;
      /** Phone */
      phone?: string | null;
      /** Posts */
      posts?: unknown[] | null;
      /** Departments */
      departments?: unknown[] | null;
      /** Manage Departments */
      manage_departments?: unknown[] | null;
      /** Config */
      config?: unknown;
      /** Other Info */
      other_info?: unknown;
      /** Auth Data */
      auth_data?: unknown[] | null;
      /** Id */
      id?: string | null;
    };
    /** UserUpdateRes */
    UserUpdateRes: {
      /** Email */
      email: string | null;
      /** Name */
      name: string | null;
      /** Phone */
      phone: string | null;
      /** Posts */
      posts: unknown[] | null;
      /** Departments */
      departments: unknown[] | null;
      /** Manage Departments */
      manage_departments: unknown[] | null;
      /** Config */
      config: unknown;
      /** Other Info */
      other_info: unknown;
      /** Auth Data */
      auth_data: unknown[] | null;
      /** Id */
      id: string | null;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** 添加用户 */
  user_add_fineflow_user_user_add_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserAddReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserAddRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 删除用户 */
  user_delete_fineflow_user_user_delete_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserDeleteReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 更新用户 */
  user_update_fineflow_user_user_update_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserUpdateReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserUpdateRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取用户 */
  user_get_fineflow_user_user_get_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserGetReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserGetRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 查询用户 */
  user_query_fineflow_user_user_query_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserQueryReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserQueryRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 添加职务 */
  post_add_fineflow_user_post_add_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PostAddReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PostAddRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 删除职务 */
  post_delete_fineflow_user_post_delete_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PostDeleteReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 更新职务 */
  post_update_fineflow_user_post_update_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PostUpdateReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PostUpdateRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取职务 */
  post_get_fineflow_user_post_get_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PostGetReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PostGetRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 查询部门 */
  department_query_fineflow_user_post_query_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PostQueryReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PostQueryRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取所有部门 */
  post_all_fineflow_user_post_all_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PostAllReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PostAllRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 通用查询职务 */
  company_equity_penetration_query_common_fineflow_user_post_query_common_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["QueryParams"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PostQueryRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 添加部门 */
  department_add_fineflow_user_department_add_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["DepartmentAddReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DepartmentAddRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 删除部门 */
  department_delete_fineflow_user_department_delete_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["DepartmentDeleteReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 更新部门 */
  department_update_fineflow_user_department_update_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["DepartmentUpdateReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DepartmentUpdateRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取部门 */
  department_get_fineflow_user_department_get_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["DepartmentGetReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DepartmentGetRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 查询部门 */
  department_query_fineflow_user_department_query_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["DepartmentQueryReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DepartmentQueryRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取所有部门 */
  department_all_fineflow_user_department_all_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["DepartmentAllReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DepartmentAllRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 添加权限规则 */
  auth_rule_add_fineflow_user_auth_rule_add_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AuthRuleAddReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AuthRuleAddRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 删除权限规则 */
  auth_rule_delete_fineflow_user_auth_rule_delete_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AuthRuleDeleteReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 更新权限规则 */
  auth_rule_update_fineflow_user_auth_rule_update_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AuthRuleUpdateReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AuthRuleUpdateRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取权限规则 */
  auth_rule_get_fineflow_user_auth_rule_get_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AuthRuleGetReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AuthRuleGetRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 查询权限规则 */
  auth_rule_query_fineflow_user_auth_rule_query_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AuthRuleQueryReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AuthRuleQueryRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取所有权限规则 */
  auth_rule_all_fineflow_user_auth_rule_all_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AuthRuleAllReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AuthRuleAllRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取登录验证码 */
  get_login_verify_code_fineflow_user_get_login_verify_code_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["GetLoginVerifyCodeReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 验证码登录 */
  login_by_verify_code_fineflow_user_login_by_verify_code_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LoginByVerifyCode"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 刷新token */
  refresh_token_fineflow_user_refresh_token_post: {
    parameters: {
      header?: {
        authorization?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 用户信息获取接口 */
  get_user_info_fineflow_user_get_user_info_post: {
    parameters: {
      header?: {
        authorization?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserInfo-Output"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 添加模块名称 */
  mod_name_add_fineflow_flow_mod_name_add_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ModNameAddReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ModNameAddRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 删除模块名称 */
  mod_name_delete_fineflow_flow_mod_name_delete_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ModNameDeleteReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 更新模块名称 */
  mod_name_update_fineflow_flow_mod_name_update_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ModNameUpdateReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ModNameUpdateRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取模块名称 */
  mod_name_get_fineflow_flow_mod_name_get_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ModNameGetReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ModNameGetRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 查询模块名称 */
  mod_name_query_fineflow_flow_mod_name_query_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ModNameQueryReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ModNameQueryRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取所有模块名称 */
  mod_name_all_fineflow_flow_mod_name_all_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ModNameAllReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ModNameAllRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 添加分类名称 */
  category_name_add_fineflow_flow_category_name_add_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryNameAddReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryNameAddRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 删除分类名称 */
  category_name_delete_fineflow_flow_category_name_delete_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryNameDeleteReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 更新分类名称 */
  category_name_update_fineflow_flow_category_name_update_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryNameUpdateReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryNameUpdateRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取分类名称 */
  category_name_get_fineflow_flow_category_name_get_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryNameGetReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryNameGetRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 查询分类名称 */
  category_name_query_fineflow_flow_category_name_query_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryNameQueryReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryNameQueryRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取所有分类名称 */
  category_name_all_fineflow_flow_category_name_all_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryNameAllReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryNameAllRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 添加节点 */
  node_add_fineflow_flow_node_add_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["NodeAddReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["NodeAddRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 删除节点 */
  node_delete_fineflow_flow_node_delete_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["NodeDeleteReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 更新节点 */
  node_update_fineflow_flow_node_update_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["NodeUpdateReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["NodeUpdateRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取节点 */
  node_get_fineflow_flow_node_get_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["NodeGetReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["NodeGetRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 查询节点 */
  node_query_fineflow_flow_node_query_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["NodeQueryReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["NodeQueryRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取所有节点 */
  node_all_fineflow_flow_node_all_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["NodeAllReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["NodeAllRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 添加工作流 */
  flow_add_fineflow_flow_flow_add_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowAddReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlowAddRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 删除工作流 */
  flow_delete_fineflow_flow_flow_delete_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowDeleteReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 更新工作流 */
  flow_update_fineflow_flow_flow_update_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowUpdateReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlowUpdateRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取工作流 */
  flow_get_fineflow_flow_flow_get_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowGetReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlowGetRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 查询工作流 */
  flow_query_fineflow_flow_flow_query_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowQueryReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlowQueryRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取所有工作流 */
  flow_all_fineflow_flow_flow_all_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowAllReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlowAllRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 添加工作流分类名称 */
  flow_category_name_add_fineflow_flow_flow_category_name_add_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowCategoryNameAddReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlowCategoryNameAddRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 删除工作流分类名称 */
  flow_category_name_delete_fineflow_flow_flow_category_name_delete_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowCategoryNameDeleteReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 更新工作流分类名称 */
  flow_category_name_update_fineflow_flow_flow_category_name_update_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowCategoryNameUpdateReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlowCategoryNameUpdateRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取工作流分类名称 */
  flow_category_name_get_fineflow_flow_flow_category_name_get_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowCategoryNameGetReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlowCategoryNameGetRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 查询工作流分类名称 */
  flow_category_name_query_fineflow_flow_flow_category_name_query_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowCategoryNameQueryReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlowCategoryNameQueryRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取所有工作流分类名称 */
  flow_category_name_all_fineflow_flow_flow_category_name_all_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowCategoryNameAllReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlowCategoryNameAllRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 添加工作流模块名称 */
  flow_mod_name_add_fineflow_flow_flow_mod_name_add_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowModNameAddReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlowModNameAddRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 删除工作流模块名称 */
  flow_mod_name_delete_fineflow_flow_flow_mod_name_delete_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowModNameDeleteReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 更新工作流模块名称 */
  flow_mod_name_update_fineflow_flow_flow_mod_name_update_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowModNameUpdateReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlowModNameUpdateRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取工作流模块名称 */
  flow_mod_name_get_fineflow_flow_flow_mod_name_get_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowModNameGetReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlowModNameGetRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 查询工作流模块名称 */
  flow_mod_name_query_fineflow_flow_flow_mod_name_query_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowModNameQueryReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlowModNameQueryRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** 获取所有工作流模块名称 */
  flow_mod_name_all_fineflow_flow_flow_mod_name_all_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FlowModNameAllReq"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlowModNameAllRes"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
